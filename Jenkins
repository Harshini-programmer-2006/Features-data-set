pipeline {
    agent any  // Use 'any' to allow Jenkins to choose an appropriate agent

    environment {
        PYTHON_ENV = 'venv'  // Virtual environment for Python
    }

    stages {
        // Stage 1: Clone the repository
        stage('Checkout') {
            steps {
                echo 'Cloning repository...'
                git branch: 'main', url: 'https://github.com/Harshini-programmer-2006/Features-data-set.git'
            }
        }

        // Stage 2: Set up the Python environment
        stage('Setup Environment') {
            steps {
                echo 'Setting up Python virtual environment...'
                bat '''
                python -m venv %PYTHON_ENV%          // Create a virtual environment
                call %PYTHON_ENV%\\Scripts\\activate.bat  // Activate the virtual environment
                pip install -r requirements.txt       // Install dependencies
                '''
            }
        }

        // Stage 3: Run the tests
        stage('Run Tests') {
            steps {
                echo 'Running unit tests...'
                bat '''
                call %PYTHON_ENV%\\Scripts\\activate.bat  // Activate the virtual environment
                pytest tests/                           // Run the tests
                '''
            }
        }

        // Stage 4: Deploy (this could be to a local HTTP server, for example)
        stage('Deploy') {
            steps {
                echo 'Deploying application...'
                bat '''
                xcopy * C:\\path\\to\\local\\http\\server\\root\\ /E /I /Y  // Copy the app to the deployment directory
                '''
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()  // Clean the workspace after the pipeline execution
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}

